rule star_aln_with_chimeric:
	input:
		INDEX=config["INDEX"]["STAR"]["PATH"]+"Genome",
		FASTQ="{replicat}/{condition}/MergedReads/{sample}_{type}.fq.gz"
	output:
		"{replicat}/{condition}/AlignementStarWithChimeric/{type}/{sample}_{type}_Chimeric.out.junction",
		"{replicat}/{condition}/AlignementStarWithChimeric/{type}/{sample}_{type}_Aligned.out.sam",
		"{replicat}/{condition}/AlignementStarWithChimeric/{type}/{sample}_{type}_Log.final.out"
		
	params:
		thread=config["ALIGNEMENT"]["STAR"]["THREAD"],
		readFileCommand=config["ALIGNEMENT"]["STAR"]["READ_FILE_COMMAND"],
		indexDir=config["INDEX"]["STAR"]["PATH"],
		outputDir="{replicat}/{condition}/AlignementStarWithChimeric/{type}/{sample}_{type}_",
		gtf=config["ANNOTATION"]["PATH"],
		P_chimSegmentMin=lambda wildcards: config["ALIGNEMENT"]["STAR"]["chimSegmentMin"][wildcards.type]
	run:
		shell("sleep $((RANDOM % 60))")
		shell("STAR --chimSegmentMin {params.P_chimSegmentMin} --runThreadN {params.thread} --genomeDir {params.indexDir} --readFilesIn {input.FASTQ} --readFilesCommand {params.readFileCommand} --outFileNamePrefix {params.outputDir} --genomeLoad LoadAndKeep ")


